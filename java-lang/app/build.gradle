/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.7/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'eclipse'  // Eclipse IDE 관련 작업을 수행할 수 있는 플러그인
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {

    // Spring IOC 컨테이너
    implementation 'org.springframework:spring-context:5.3.39'
    
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper:9.0.93'
    
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
    
    // AOP 라이브러리
    implementation 'org.aspectj:aspectjweaver:1.9.22.1'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}




// eclipse 프로젝트 이름을 설정하기
eclipse {
    project {
        name = "java-lang"  // 프로젝트 이름을 지정하지 않으면 폴더 이름(app)을 사용한다.
    }
    jdt {
      sourceCompatibility = 21
      targetCompatibility = 21
      javaRuntimeName = "JavaSE-21"
    }
}

